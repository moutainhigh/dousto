<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<security:http pattern="/**/error.*" security="none" />
	<security:http pattern="/**/error*.*" security="none" />
	<security:http pattern="/**/*.ico" security="none" />
	<security:http pattern="/**/*.js" security="none" />
	<security:http pattern="/**/*.jpg" security="none" />
	<security:http pattern="/**/*.jpeg" security="none" />
	<security:http pattern="/**/*.css" security="none" />
	<security:http pattern="/**/*.png" security="none" />
	<security:http pattern="/**/*.gif" security="none" />
	<security:http pattern="/resources/*.*" security="none" />
	<security:http pattern="/css/*.*" security="none" />
	<security:http pattern="/images/*.*" security="none" />

	<security:http auto-config="true" entry-point-ref="casEntryPoint" access-decision-manager-ref="accessDecisionManager" >
		<!--  -->
		<security:intercept-url pattern="/**/*.jspx" access="ROLE_USER" />
		<security:intercept-url pattern="/**/*.html" access="ROLE_USER" />
		<security:intercept-url pattern="/**/*.action" access="ROLE_USER" />
		
		<security:access-denied-handler error-page="/error_403.jspx" />
		<security:logout logout-url="/j_spring_cas_security_logout" invalidate-session="true" logout-success-url="${cas.logoutUrl}" />
		<security:custom-filter ref="casLogoutFilter" before="LOGOUT_FILTER" />
		<security:custom-filter ref="authenticationFilter" position="CAS_FILTER" />
		<security:custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
		<security:custom-filter ref="customSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
	</security:http>

	<bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="${cas.loginUrl}" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>
	<!-- -->
	<bean id="authenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>

	<!-- AuthenticationManager -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="casAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="authenticationUserDetailsService" ref="casAuthenticationUserDetailsService" />
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${cas.serverUrlPrefix}" />
			</bean>
		</property>
		<property name="key" value="springRocks" />
	</bean>
	<bean id="casAuthenticationUserDetailsService" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>

	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service" value="${cas.callback.admin}" />
		<property name="authenticateAllArtifacts" value="true" />
	</bean>

	<!-- 单点退出 -->
	<!-- 注销客户端 -->
	<bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />
	<!-- 注销服务器端 -->
	<bean id="casLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="${cas.logoutSuccessUrl}" />
		<constructor-arg>
			<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</constructor-arg>
		<property name="filterProcessesUrl" value="/j_spring_cas_security_logout" />
	</bean>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="com.ibm.sc.service.security.CustomRoleVoter" />
				<!-- <bean class="org.springframework.security.access.vote.RoleVoter" /> -->
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>

	<!-- 定义权限、资源关系  -->
	<bean id="customSecurityInterceptor" class="com.ibm.sc.service.security.CustomSecurityInterceptor">
		<property name="rejectPublicInvocations" value="false" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource" ref="adminSecurityMetadataSource" />
	</bean>
	
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor" >
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource" ref="adminSecurityMetadataSource" />
	</bean>


</beans>    